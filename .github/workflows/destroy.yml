name: Destroy Infra & Clean Environment

on:
  workflow_dispatch: # manual trigger

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2️⃣ Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # 3️⃣ Terraform init (required for Terraform Cloud)
      - name: Terraform Init
        working-directory: terraform/environment/dev
        run: terraform init

      # 4️⃣ Destroy Terraform infrastructure
      - name: Terraform Destroy
        working-directory: terraform/environment/dev
        run: terraform destroy -auto-approve

      # 5️⃣ Set up Python & Ansible
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 6️⃣ Install Ansible & Kubernetes collection
      - name: Install Ansible & Kubernetes Collection
        run: |
          python -m pip install --upgrade pip
          pip install ansible
          ansible-galaxy collection install kubernetes.core

      # 7️⃣ Remove Kubernetes resources via Ansible
      - name: Clean K8s Resources
        run: |
          ansible-playbook ./ansible/playbooks/clean-env.yml -i ./ansible/inventories/dev/hosts.yml

      # 8️⃣ Log in to Docker
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 9️⃣ Remove Docker containers & images
      - name: Clean Docker
        run: |
          docker stop $(docker ps -aq) || true
          docker rm $(docker ps -aq) || true
          docker rmi $(docker images -q) || true
