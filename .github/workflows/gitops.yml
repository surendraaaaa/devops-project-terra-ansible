name: GitOps Pipeline - Terraform and K8s Deployment

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: dev
  TERRAFORM_DIR: terraform/environment/dev

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform Infrastructure
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com
          output-credentials: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Format
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform fmt -recursive

      - name: Terraform Plan
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve tfplan

      - name: Save Terraform Output
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform output -json > terraform-output.json

      - name: Upload Terraform Output
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-output
          path: ${{ env.TERRAFORM_DIR }}/terraform-output.json

  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: surendraprajapati
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Image
        env:
          DOCKER_REGISTRY: surendraprajapati
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd frontend
          docker build -t $DOCKER_REGISTRY/frontend:$IMAGE_TAG .
          docker push $DOCKER_REGISTRY/frontend:$IMAGE_TAG
          echo "FRONTEND_IMAGE=$DOCKER_REGISTRY/frontend:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build and Push Backend Image
        env:
          DOCKER_REGISTRY: surendraprajapati
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd backend
          docker build -t $DOCKER_REGISTRY/backend:$IMAGE_TAG .
          docker push $DOCKER_REGISTRY/backend:$IMAGE_TAG
          echo "BACKEND_IMAGE=$DOCKER_REGISTRY/backend:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Update Kubernetes Manifests
        run: |
          sed -i "s|image: .*frontend.*|image: ${{ env.FRONTEND_IMAGE }}|g" k8s/all-in-one.yml
          sed -i "s|image: .*backend.*|image: ${{ env.BACKEND_IMAGE }}|g" k8s/all-in-one.yml

      - name: Upload Updated Manifests
        uses: actions/upload-artifact@v4
        with:
          name: k8s-manifests
          path: k8s/all-in-one.yml

  deploy:
    name: Deploy to EKS
    needs: [terraform, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Terraform Output
        uses: actions/download-artifact@v4
        with:
          name: terraform-output
          path: ./terraform-output

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ansible and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3 kubernetes openshift

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name $(jq -r '.cluster_name.value' terraform-output/terraform-output.json)

      - name: Download Updated Manifests
        uses: actions/download-artifact@v4
        with:
          name: k8s-manifests
          path: k8s/

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
        run: |
          cd ansible
          ansible-playbook -i inventories/dev/hosts.yml playbooks/deploy-app.yml
