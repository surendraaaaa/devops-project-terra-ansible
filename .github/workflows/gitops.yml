name: GitOps Pipeline - Terraform and K8s Deployment

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: dev
  TERRAFORM_DIR: terraform/environment/dev

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform Infrastructure
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Format
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform fmt -check

      - name: Terraform Plan
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve tfplan

      - name: Save Terraform Output
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform output -json > terraform-output.json

      - name: Upload Terraform Output
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: terraform-output
          path: ${{ env.TERRAFORM_DIR }}/terraform-output.json

  deploy:
    name: Deploy to EKS
    needs: terraform
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Terraform Output
        uses: actions/download-artifact@v3
        with:
          name: terraform-output
          path: ./terraform-output

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ansible and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3 kubernetes openshift

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name $(jq -r '.cluster_name.value' terraform-output/terraform-output.json)

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
        run: |
          cd ansible
          ansible-playbook -i inventories/dev/hosts.yml playbooks/deploy-app.yml
